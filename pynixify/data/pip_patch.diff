diff --git a/src/pip/_internal/operations/prepare.py b/src/pip/_internal/operations/prepare.py
index 80723fffe..23016adfb 100644
--- a/src/pip/_internal/operations/prepare.py
+++ b/src/pip/_internal/operations/prepare.py
@@ -441,6 +441,8 @@ class RequirementPreparer:
         self, reqs: Iterable[InstallRequirement], parallel_builds: bool = False
     ) -> None:
         """Prepare linked requirements more, if needed."""
+        print(reqs)
+        raise Exception
         reqs = [req for req in reqs if req.needs_more_preparation]
         for req in reqs:
             # Determine if any of these requirements were already downloaded.
diff --git a/src/pip/_internal/resolution/resolvelib/resolver.py b/src/pip/_internal/resolution/resolvelib/resolver.py
index a605d6c25..8c028df29 100644
--- a/src/pip/_internal/resolution/resolvelib/resolver.py
+++ b/src/pip/_internal/resolution/resolvelib/resolver.py
@@ -98,9 +98,9 @@ class Resolver(BaseResolver):
                 cast("ResolutionImpossible[Requirement, Candidate]", e),
                 collected.constraints,
             )
-            raise error from e
 
         req_set = RequirementSet(check_supported_wheels=check_supported_wheels)
+        return req_set
         for candidate in result.mapping.values():
             ireq = candidate.get_install_requirement()
             if ireq is None:
diff --git a/src/pip/_vendor/pep517/wrappers.py b/src/pip/_vendor/pep517/wrappers.py
index e031ed708..751599975 100644
--- a/src/pip/_vendor/pep517/wrappers.py
+++ b/src/pip/_vendor/pep517/wrappers.py
@@ -169,6 +169,7 @@ class Pep517HookCaller(object):
         It returns the result of calling the equivalently named hook in a
         subprocess.
         """
+        raise Exception
         return self._call_hook('get_requires_for_build_wheel', {
             'config_settings': config_settings
         })
@@ -203,6 +204,7 @@ class Pep517HookCaller(object):
         'prepare_metadata_for_build_wheel', and the same metadata_directory is
         used, the previously built wheel will be copied to wheel_directory.
         """
+        raise Exception
         if metadata_directory is not None:
             metadata_directory = abspath(metadata_directory)
         return self._call_hook('build_wheel', {
